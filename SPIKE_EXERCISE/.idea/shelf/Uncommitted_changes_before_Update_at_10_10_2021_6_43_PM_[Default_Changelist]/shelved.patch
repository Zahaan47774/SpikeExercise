Index: app/src/main/java/com/example/spike_exercise/ui/maintenance/Request.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.spike_exercise.ui.maintenance;\r\n\r\npublic class Request {\r\n    public String userID,tenantID;\r\n    public String request,response;\r\n    public boolean priority;\r\n    public Request(String userID,String tenantID,String request,boolean priority){\r\n        this.userID = userID;\r\n        this.tenantID = tenantID;\r\n        this.request = request;\r\n        this.response = \"\";\r\n        this.priority = priority;\r\n    }\r\n    public Request(){\r\n\r\n    }\r\n\r\n    public void setPriority(boolean priority) {\r\n        this.priority = priority;\r\n    }\r\n\r\n    public boolean isPriority() {\r\n        return priority;\r\n    }\r\n\r\n    public String getResponse() {\r\n        return response;\r\n    }\r\n\r\n    public void setResponse(String response) {\r\n        this.response = response;\r\n    }\r\n\r\n    public String getTenantID() {\r\n        return tenantID;\r\n    }\r\n\r\n    public String getRequest() {\r\n        return request;\r\n    }\r\n\r\n    public void setRequest(String request) {\r\n        this.request = request;\r\n    }\r\n\r\n    public void setTenantID(String tenantID) {\r\n        this.tenantID = tenantID;\r\n    }\r\n\r\n    public String getUserID() {\r\n        return userID;\r\n    }\r\n\r\n    public void setUserID(String userID) {\r\n        this.userID = userID;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/spike_exercise/ui/maintenance/Request.java b/app/src/main/java/com/example/spike_exercise/ui/maintenance/Request.java
--- a/app/src/main/java/com/example/spike_exercise/ui/maintenance/Request.java	(revision 91ce1a5d37000e9500cfa613498bb56505c807e3)
+++ b/app/src/main/java/com/example/spike_exercise/ui/maintenance/Request.java	(date 1633909407582)
@@ -1,12 +1,20 @@
 package com.example.spike_exercise.ui.maintenance;
 
 public class Request {
-    public String userID,tenantID;
+    public String userID,tenantID, requestID;
     public String request,response;
     public boolean priority;
+    public Request(String userID,String tenantID,String request,boolean priority, String requestID){
+        this.userID = userID;
+        this.tenantID = tenantID; // landlordID
+        this.requestID = requestID;
+        this.request = request;
+        this.response = "";
+        this.priority = priority;
+    }
     public Request(String userID,String tenantID,String request,boolean priority){
         this.userID = userID;
-        this.tenantID = tenantID;
+        this.tenantID = tenantID; // landlordID
         this.request = request;
         this.response = "";
         this.priority = priority;
Index: app/src/main/java/com/example/spike_exercise/ui/maintenance/LandlordMaintenanceFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.spike_exercise.ui.maintenance;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.spike_exercise.MainActivity;\r\nimport com.example.spike_exercise.R;\r\nimport com.example.spike_exercise.data.LoginRepository;\r\nimport com.example.spike_exercise.databinding.FragmentLandlordMaintenanceBinding;\r\nimport com.example.spike_exercise.ui.login.LoginFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class LandlordMaintenanceFragment extends Fragment implements OnCompleteListener<DocumentReference> {\r\n\r\n    private LandlordMaintenanceViewModel LandlordMaintenanceViewModel;\r\n    private FragmentLandlordMaintenanceBinding binding;\r\n\r\n    // buttons and text fields\r\n    private TextView textView1, textView2, textView10, textView11, textView6, textView12;\r\n    private EditText editText1;\r\n    private String userID;\r\n    private Button button1, button2;\r\n    private int index; // keeps track of what request is being shown\r\n    private boolean highList;\r\n    FirebaseFirestore db;\r\n    FirebaseAuth auth;\r\n    Request maintenanceRequest;\r\n\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             ViewGroup container, Bundle savedInstanceState) {\r\n        LandlordMaintenanceViewModel =\r\n                new ViewModelProvider(this).get(LandlordMaintenanceViewModel.class);\r\n\r\n        binding = FragmentLandlordMaintenanceBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n\r\n        button1 = binding.buttonDisplayRequest;\r\n        button2 = binding.buttonSendMessage;\r\n        textView1 = binding.textViewDisplayUser;\r\n        textView2 = binding.textViewRequest;\r\n        textView6 = binding.textViewPriority;\r\n        textView10 = binding.textView10; // \"Tenant ID: \"\r\n        textView11 = binding.textView11; // \"Priority: \"\r\n        textView12 = binding.textView12; // \"Request: \"\r\n        editText1 = binding.editTextSendMessage;\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        // sort into high and low priorities\r\n        ArrayList<Request> highPriority = new ArrayList<>();\r\n        ArrayList<Request> lowPriority = new ArrayList<>();\r\n\r\n        index = 0;\r\n        highList = false;\r\n\r\n        db.collection(\"maintananence\").whereEqualTo(\"tenantID\", LoginRepository.getInstance().getCurrentUser().getUid()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                        // if request is priority sort into high list\r\n                        if ((boolean)document.get(\"priority\")) {\r\n                            highPriority.add(new Request((String) document.get(\"tenantID\"),(String) document.get(\"userID\"),(String) document.get(\"request\"),(boolean) document.get(\"priority\")));\r\n                        } else { // else sort into low list\r\n                            lowPriority.add(new Request((String) document.get(\"tenantID\"),(String) document.get(\"userID\"),(String) document.get(\"request\"),(boolean) document.get(\"priority\")));\r\n                        }\r\n                    }\r\n                    //check if list is empty\r\n                    if (highPriority.isEmpty() && lowPriority.isEmpty()) {\r\n                        textView1.setText(\"\");\r\n                        textView2.setText(\"No maintenance requests\");\r\n                    } else {\r\n                        textView2.setText(\"Click above to display requests\");\r\n                    }\r\n                    // keeps track of what list, 0 if no high priorities\r\n                    if (!highPriority.isEmpty()) {\r\n                        highList = true;\r\n                    }\r\n                    // displays new request on click\r\n                    button1.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            if (highList) { // if on highList\r\n                                if (index == highPriority.size()) {\r\n                                    if (!lowPriority.isEmpty()) {\r\n                                        highList = false; // move to low list\r\n                                        index = 0; // restart index\r\n                                    } else {\r\n                                        index = 0; // keep cycling through high list and keep highList high\r\n                                    }\r\n                                }\r\n                                // display user id within textview1\r\n                                textView1.setText(highPriority.get(index).getTenantID());\r\n                                // display maintenance request within textview2\r\n                                textView2.setText(highPriority.get(index).getRequest());\r\n                                textView6.setText(\"High\");\r\n                                index++;\r\n                            } else { // on lowList\r\n                                if (index == lowPriority.size()) {\r\n                                    if (!highPriority.isEmpty()) {\r\n                                        highList = true; // move to low list\r\n                                        index = 0; // restart index\r\n                                    } else {\r\n                                        index = 0; // keep cycling through high list and keep highList high\r\n                                    }\r\n                                }\r\n                                // display use id within textview1\r\n                                textView1.setText(lowPriority.get(index).getTenantID());\r\n                                // display maintenance request within textview2\r\n                                textView2.setText(lowPriority.get(index).getRequest());\r\n                                textView6.setText(\"Low\");\r\n                                index++;\r\n                            }\r\n                        }\r\n                    });\r\n                    // sends response message on click\r\n                    button2.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            // update requests with landlord response\r\n                            // list.get(index).setResponse(editText1.getText().toString());\r\n                            //list.get(index).setResponse(editText1.getText().toString());\r\n                            if (highList) {\r\n                                highPriority.get(index).setResponse(editText1.getText().toString());\r\n                            } else {\r\n                                lowPriority.get(index).setResponse(editText1.getText().toString());\r\n                            }\r\n                            // how do i do this\r\n                            db.collection(\"maintananence\").document(maintenanceRequest.getUserID()).update(\"response\", editText1.getText().toString());\r\n                            editText1.setText(null);\r\n                        // save(view);\r\n\r\n                        }\r\n/*\r\n                        private void save(View view) {\r\n                            db.collection(\"maintananence\").document(list.get(index).toString()).update(\"response\", editText1.getText().toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void unused) {\r\n                                    System.out.println(\"Suceess\");\r\n                                }\r\n                            }).addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    System.out.println(e.getMessage());\r\n                                }\r\n                            });\r\n                        }\r\n */\r\n                    });\r\n                } else {\r\n                    System.out.println(\"Error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        return root;\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        binding = null;\r\n    }\r\n\r\n    private void navigateToMaintenanceActivity() {\r\n        Intent intent = new Intent(getContext(), LandlordMaintenanceFragment.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onComplete(@NonNull Task<DocumentReference> task) {\r\n        //loginViewModel.setBusyStatus(false);\r\n        if(task.isSuccessful()) {\r\n            System.out.println(\"Success\");\r\n        } else {\r\n            String errorMessage = task.getException().getMessage().toLowerCase();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/spike_exercise/ui/maintenance/LandlordMaintenanceFragment.java b/app/src/main/java/com/example/spike_exercise/ui/maintenance/LandlordMaintenanceFragment.java
--- a/app/src/main/java/com/example/spike_exercise/ui/maintenance/LandlordMaintenanceFragment.java	(revision 91ce1a5d37000e9500cfa613498bb56505c807e3)
+++ b/app/src/main/java/com/example/spike_exercise/ui/maintenance/LandlordMaintenanceFragment.java	(date 1633909407576)
@@ -49,6 +49,8 @@
     private Button button1, button2;
     private int index; // keeps track of what request is being shown
     private boolean highList;
+    private Request requestModel;
+
     FirebaseFirestore db;
     FirebaseAuth auth;
     Request maintenanceRequest;
@@ -144,34 +146,14 @@
                         @Override
                         public void onClick(View view) {
                             // update requests with landlord response
-                            // list.get(index).setResponse(editText1.getText().toString());
-                            //list.get(index).setResponse(editText1.getText().toString());
                             if (highList) {
-                                highPriority.get(index).setResponse(editText1.getText().toString());
+                                requestModel = highPriority.get(index);
                             } else {
-                                lowPriority.get(index).setResponse(editText1.getText().toString());
+                                requestModel = lowPriority.get(index);
                             }
-                            // how do i do this
-                            db.collection("maintananence").document(maintenanceRequest.getUserID()).update("response", editText1.getText().toString());
+                            db.collection("maintananence").document(requestModel.requestID()).update("response", editText1.getText().toString());
                             editText1.setText(null);
-                        // save(view);
-
                         }
-/*
-                        private void save(View view) {
-                            db.collection("maintananence").document(list.get(index).toString()).update("response", editText1.getText().toString()).addOnSuccessListener(new OnSuccessListener<Void>() {
-                                @Override
-                                public void onSuccess(Void unused) {
-                                    System.out.println("Suceess");
-                                }
-                            }).addOnFailureListener(new OnFailureListener() {
-                                @Override
-                                public void onFailure(@NonNull Exception e) {
-                                    System.out.println(e.getMessage());
-                                }
-                            });
-                        }
- */
                     });
                 } else {
                     System.out.println("Error");
Index: app/src/main/java/com/example/spike_exercise/ui/payment/LandlordPaymentFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.spike_exercise.ui.payment;\r\n\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.spike_exercise.R;\r\nimport com.example.spike_exercise.data.LoginRepository;\r\nimport com.example.spike_exercise.databinding.FragmentLandlordPaymentBinding;\r\nimport com.example.spike_exercise.databinding.FragmentTenantMaintenanceBinding;\r\nimport com.example.spike_exercise.ui.maintenance.Request;\r\nimport com.example.spike_exercise.ui.maintenance.TenantMaintenanceFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class LandlordPaymentFragment extends Fragment {\r\n\r\n    private LandlordPaymentViewModel mViewModel;\r\n    private FragmentLandlordPaymentBinding binding;\r\n    PaymentModel userPayment;\r\n    TextView text;\r\n    FirebaseFirestore db;\r\n    EditText ed1;\r\n    int addAmount;\r\n    public static LandlordPaymentFragment newInstance() {\r\n        return new LandlordPaymentFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState\r\n    ) {\r\n        binding = FragmentLandlordPaymentBinding.inflate(inflater, container, false);\r\n        View root = binding.getRoot();\r\n        addAmount =0;\r\n        db = FirebaseFirestore.getInstance();\r\n        Spinner spinner = binding.spinner3;\r\n        ArrayList<PaymentModel> list = new ArrayList<>();\r\n        text = binding.textView7;\r\n        ed1 = binding.editTextTextPersonName;\r\n        Button button = binding.button2;\r\n        db.collection(\"payments\").whereEqualTo(\"tenantID\", LoginRepository.getInstance().getCurrentUser().getUid()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n\r\n                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                        list.add(new PaymentModel(Integer.parseInt((String) document.get(\"amount\")),(String) document.get(\"name\"),(String) document.get(\"tenantID\"),(String) document.get(\"userID\"), document.getId()));\r\n                    }\r\n                    ArrayAdapter<PaymentModel> adapter = new ArrayAdapter<PaymentModel>(getActivity(), android.R.layout.simple_spinner_dropdown_item,list);\r\n                    spinner.setAdapter(adapter);\r\n                    spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n\r\n                        @Override\r\n                        public void onItemSelected(AdapterView<?> adapterView, View view,\r\n                                                   int position, long id) {\r\n                            userPayment = adapter.getItem(position);\r\n                            text.setText(String.valueOf(userPayment.getAmount()));\r\n                            button.setOnClickListener(this::save);\r\n                        }\r\n\r\n                        private void save(View view) {\r\n                            if(isParsable(ed1.getText().toString())){\r\n                                addAmount = Integer.parseInt(ed1.getText().toString());\r\n                            }\r\n                            int total = addAmount+ userPayment.amount;\r\n                            db.collection(\"payments\").document(userPayment.paymentID).update(\"amount\",String.valueOf(total)).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void unused) {\r\n                                    System.out.println(\"Suceess\");\r\n                                }\r\n                            }).addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    System.out.println(e.getMessage());\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        @Override\r\n                        public void onNothingSelected(AdapterView<?> adapter) {  }\r\n                    });\r\n\r\n                } else {\r\n                    System.out.println(\"Error\");\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        return root;\r\n    }\r\n    public static boolean isParsable(String input) {\r\n        try {\r\n            Integer.parseInt(input);\r\n            return true;\r\n        } catch (final NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        mViewModel = new ViewModelProvider(this).get(LandlordPaymentViewModel.class);\r\n        // TODO: Use the ViewModel\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/spike_exercise/ui/payment/LandlordPaymentFragment.java b/app/src/main/java/com/example/spike_exercise/ui/payment/LandlordPaymentFragment.java
--- a/app/src/main/java/com/example/spike_exercise/ui/payment/LandlordPaymentFragment.java	(revision 91ce1a5d37000e9500cfa613498bb56505c807e3)
+++ b/app/src/main/java/com/example/spike_exercise/ui/payment/LandlordPaymentFragment.java	(date 1633909407587)
@@ -54,7 +54,7 @@
     ) {
         binding = FragmentLandlordPaymentBinding.inflate(inflater, container, false);
         View root = binding.getRoot();
-        addAmount =0;
+        addAmount = 0;
         db = FirebaseFirestore.getInstance();
         Spinner spinner = binding.spinner3;
         ArrayList<PaymentModel> list = new ArrayList<>();
